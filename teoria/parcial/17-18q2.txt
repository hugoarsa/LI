1) (3 points)
1a) Let F, G, H be propositional formulas. Is it true that always (F ∧ G) ∧ H ≡ F ∧ (G ∧ H)?
Prove it using only the definition of propositional logic.

(F ∧ G) ∧ H ≡ F ∧ (G ∧ H) means
A I, I |= (F ∧ G) ∧ H iff I |= (F ∧ G) ∧ H


A I, I |= (F ∧ G) ∧ H iff I |= F ∧ (G ∧ H) 				iff
min(min(eval(F),eval(G)),eval(H)) = min(eval(F),min(eval(G),eval(H)))	iff [def min]
min(eval(F),eval(G),eval(H)) = min(eval(F),eval(G),eval(H)) 		iff
true.

1b) Let F, G, H be propositional formulas. Is it true that always F ∧ (G ∨ H) ≡ F ∨ (G ∧ H)?
Prove it using only the definition of propositional logic.


F ∧ (G ∨ H) ≡ F ∨ (G ∧ H)
A I, I |= F ∧ (G ∨ H) iff I |= F ∨ (G ∧ H)


not true!

conuter example, 

F: q
G: p
H: -p

the first one would be a tautology and the second one unsat



2) (2 points) Write all clauses obtained by applying Tseitin’s transformation to the formula
(p ∧ (q ∨ ¬r)) ∨ q. Use auxiliary variables named a0, a1, a2, . . . (where a0 is for the root).

ao <-> a1 v q    -ao v a1 v q, -a1 v ao, -q v ao
a1 <-> p & a2    -p v -a2 v a1, -a1 v p, -a1 v a2
a2 <-> q v -r    -a2 v q v -r, -q v a2, r v a2

3) (4 points) John wants to buy a subset of Amazon’s n products (and, as you know, with a very large
n). But he has the following 1 + p + q constraints, where all M, Ii, Lj , Rj denote subsets of {1 . . . n}:
he must buy all products of M
I1 . . . Ip are incompatibility sets: for each Ii, John cannot buy all products in Ii
constraints L1 → R1 . . . Lq → Rq, where Li → Ri means that if John buys all products of
Li, then he must also buy all products of Ri.
3a) Answer all three questions very briefly. What would you recommend John to do for efficiently
finding a set S of products that he can buy without violating any of the constraints?

we could try to make a horn sat in order to make it efficient

restriction of consequence Li -> Ri can be expressed by horn clauses of implication -li1 v ... v -lim v Ri 
for all Ri 

and the first one can be for each Ij j between(1,p), we can add a -Ij1 v ... v -Ijk where k is the number of 
elements

and for all the products of M a positive clause with only themselves

3b) Same question for finding a set S with minimal |S|.

it does it by itself

3c) Is the minimal set S of 3b) unique or can there be several distinct minimal sets?

unique.

4) Consider the following problem, called model counting:
Input: a natural number k and a set of propositional clauses S over symbols P.
Question: does S have at least k different models I : P → {0, 1}?
We want to analyze the computational complexity of model counting, that is, determine if it is poly-
nomial, NP-complete, or perhaps even harder, etc. Answer all four questions very briefly (max. 10
words per question).
4a) (1 point) Is model counting at least as hard as SAT? (that is, can we express SAT as a model
counting problem?) Why?
Answer: Yes. A set of clauses S is SAT iff the model counting problem with input k = 1 and S
answers “yes”.
4b) (4b,c,d: 1 bonus point, if short and correct) What do you think, is SAT at least as hard as model
counting? Why?
Answer: No. No way to do model counting by a polynomial number of calls to SAT is known. So
SAT does not seem to be as hard. Model counting seems harder than SAT.
4c,4d) Same questions if S is a set of Horn clauses.
Answer: Same answers as before. In fact, no way to do Horn model counting by a polynomial number
of calls to arbitrary SAT is known.

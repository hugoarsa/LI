1) (4 points)
Consider the following statement. For all propositional formulas F, G, H,
(F → G) ∧ (H → G) is satisfiable iff ¬G |= ¬F ∧ ¬H.
Prove the following using only the definitions of propositional logic.
1a) Is the =⇒ implication of this iff statement true?

(F → G) ∧ (H → G) is satisfiable 		iff
E I, I |= (F → G) ∧ (H → G)			iff
E I, I is model (F → G) ∧ (H → G)		iff
E I, eval((F → G) ∧ (H → G)) = 1		iff
E I, eval((-F v G) & (-H V G)) = 1		iff
E I, min(max(1-eval(F),G),max(1-eval(H),G)) 	

por casos eval(G) = 0 (1 - eval(g) = 1)

E


1b) Is the ⇐= implication of this iff statement true?
1c) Is it true that if ¬G |= ¬F ∧ ¬H, then (F → G) ∧ (H → G) is a tautology?
(hint for 1c: use what you did in 1b).

1b and 1c are true:
¬G |= ¬F ∧ ¬H
=⇒ (by def. of logical consequence)
for all I, either I 6|= ¬G or I |= ¬F ∧ ¬H
=⇒ (by def of |=)
for all I, either evalI (¬G) = 0 or evalI (¬F ∧ ¬H) = 1
=⇒ (by def of eval¬, ∧)
for all I, either 1 − evalI (G) = 0 or min(evalI (¬F ), evalI (¬H)) = 1
=⇒ (by def of eval and min)
for all I, either evalI (G) = 1 or evalI (¬F ) = evalI (¬H) = 1
=⇒ (by def of max)
for all I, max(evalI (¬F ), evalI (G)) = 1 and max(evalI (¬H), evalI (G))) = 1 =⇒ (by def of eval ∨)
for all I, evalI (¬F ∨ G) = 1 and evalI (¬H ∨ G) = 1
=⇒ (by def of min)
for all I, min(evalI (¬F ∨ G), evalI (¬H ∨ G)) = 1
=⇒ (by def of eval ∧)
for all I, evalI (¬F ∨ G) ∧ (¬H ∨ G)) = 1
=⇒ (by def of →)
for all I, evalI (F → G) ∧ (H → G)) = 1
=⇒ (by def of |=)
for all I, I |= (F → G) ∧ (H → G)
=⇒ (by def of satisfiable and tautology)
(F → G) ∧ (H → G) is satisfiable, and, in fact, it is a tautology.


2) (4 points) Let S1 , S2 be the two sets of clauses given below. How many models does each one of
them have? Give a very short and simple answer, based on what these sets encode.
S1 = { ¬x0 ∨ ¬x1 , ¬x0 ∨ ¬x2 , ¬x0 ∨ ¬a1 , ¬x1 ∨ ¬x2 , a1 ∨ ¬x3 , ¬x1 ∨ ¬a1 , ¬x2 ∨ ¬a1 , a1 ∨ ¬x4 , ¬x3 ∨ ¬x4 }
S2 = { ¬x0 ∨ ¬a4 , ¬x1 ∨ ¬a4 ,¬x2 ∨ ¬a4 ,¬x3 ∨ ¬a4 ,¬x4 ∨ a4 ,¬x0 ∨ ¬a2 ,¬x1 ∨ ¬a2 ,¬x2 ∨ a2 ,¬x3 ∨ a2 ,¬x4 ∨ ¬a2 ,¬x0 ∨ ¬a1,¬x1 ∨ a1,¬x2 ∨ ¬a1,¬x3 ∨ a1,¬x4 ∨ ¬a1 }

1 and S2 are the Heule-3 and logarithmic encodings of x0 + . . . + x4 ≤ 1, respectively.
S1 has 7 models: if some xi is true then all other xj become false and also a1 has only one possible
value (5 models); if all xi are false then a1 can take either value (2 more models).
S2 has 13 models: if some xi is true then all other xj become false and also the a4 , a2 , a1 have only
one possible value (5 models); if all xi are false then the a4 , a2 , a1 can take all 23 = 8 possible values.


3) (2 points) Given a graph, we want to decide whether it is 2-colorable, that is, if we can assign
one of 2 colors to each node such that, for every edge (u, v), nodes u and v get different colors. Give
a short and simple answer based on propositional logic of the following: what is the computational
complexity of this problem? Is it polynomial, NP-complete?

Answer: We can solve it with 2-SAT, so it is polynomial, in fact, linear. For each node i we
introduce a variable xi meaning “node i has color 1” (if xi is false it means node i has the other color).
Moreover, there will be two binary clauses xu ∨ xv and ¬xu ∨ ¬xv for each edge (u, v).


